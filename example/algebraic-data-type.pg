-- normal adt
data (Maybe a)
  Just a
  Nohting

-- gadt
data (Option a)
  {
    Some a : { a -> Option a }
    None : None
  }

-- typeclass
class (Functor a)
  {
    map : { { a -> b } -> (f a) -> (f b) }
  }

-- instance
instance (FunctorMaybe) (Functor Maybe)
  define (map f m)
    match m
      {
        Nothing => Nothing
        Just a => Just (f a)
      }
